services:
  mqtt-receiver:
    image: zubrailx/mqtt-receiver:latest
    build:
      context: mqtt_receiver
      dockerfile: dockerfile
    restart: always
    command: broker-mosquitto 1883

  broker-mosquitto:
    image: eclipse-mosquitto:2.0-openssl
    container_name: broker-mosquitto
    ports:
      - '1883:1883'
    volumes:
      - '${PWD}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    restart: unless-stopped
    ports:
      - '127.0.0.1:9000:9000'
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:9000
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  kafka-connect:
    build: 
      context: .
      dockerfile: kafka-connect.dockerfile 
    ports:
      - '127.0.0.1:9001:9001'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka1:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_ADVERTISED_PORT: 9001
      CONNECT_LISTENERS: http://0.0.0.0:9001
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offset
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-config
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.protobuf.ProtobufConverter


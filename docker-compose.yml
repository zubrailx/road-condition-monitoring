services:
  kafka1:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9094'
    environment:
      # kRaft
      CLUSTER_ID: NzUwOWJmNDYtNTNhMy00N2
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093
      # Listeners
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Others
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka-data:/var/lib/kafka/data
      - '${PWD}/kafka/init-topics.sh:/init-topics.sh'
    command:
      - /init-topics.sh

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka1
    ports:
      # - '127.0.0.1:9080:8080'
      - '8080:8080'
    restart: unless-stopped
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: 1357924680
    volumes:
      - '${PWD}/kafkaui/dynamic_config.yaml:/etc/kafkaui/dynamic_config.yaml'
       
  kafka-mqtt-proxy:
    image: confluentinc/cp-kafka-mqtt:latest
    depends_on:
      - kafka1
    ports:
      - '1883:1883'
    environment:
      KAFKA_MQTT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:9092
      KAFKA_MQTT_TOPIC_REGEX_LIST: monitoring:.*
      KAFKA_MQTT_LISTENERS: 0.0.0.0:1883
      KAFKA_MQTT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MQTT_MQTT_MESSAGE_MAX_BYTES: 1048576

  mongo:
    image: mongo:7
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1357924680
    volumes:
      - 'mongo-data:/data/db'

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: 'mongo'
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1357924680
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: 1357924680

  clickhouse:
    image: clickhouse/clickhouse-server:24.3-alpine
    restart: unless-stopped
    volumes:
      - ${PWD}/clickhouse:/docker-entrypoint-initdb.d/
      - 'clickhouse-data:/var/lib/clickhouse'

  guessr:
    # image: zubrailx/guessr:latest
    build:
      context: .
      dockerfile: guessr.dockerfile
    restart: unless-stopped
    command: kafka1:9092

  monitoring-keeper:
    # image: zubrailx/monitoring-keeper:latest
    build:
      context: .
      dockerfile: monitoring_keeper.dockerfile
    restart: unless-stopped
    command:  kafka1:9092 mongo:27017
    environment:
      MK_MONGO_USERNAME: admin
      MK_MONGO_PASSWORD: 1357924680

  points-consumer:
    build:
      context: points_consumer
      dockerfile: dockerfile
    restart: unless-stopped
    command: kafka1:9092 clickhouse:9000

  api:
    build:
      context: api
      dockerfile: dockerfile
    ports:
      - '8082:8082'
    restart: unless-stopped
    command: clickhouse:9000 :8082

volumes:
  kafka-data:
  mongo-data:
  clickhouse-data:
